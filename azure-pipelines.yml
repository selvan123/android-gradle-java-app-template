# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'assembleDebug testDebug lintDebug jacocoDebugReport'
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      # Write your commands here
      
      echo 'XML Files'
      
      sudo find . -print | grep -i '.*[.]xml'

      echo 'HTML Files'

      sudo find . -print | grep -i '.*[.]html'

      
- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'JaCoCo'
    summaryFileLocation: '${System.DefaultWorkingDirectory}/**/test-results/testDebugUnitTest/TEST-burrows.apps.example.template.util.PlayServicesUtilsTest.xml'
    reportDirectory: '${System.DefaultWorkingDirectory}/**/test-results/testDebugUnitTest/html'
